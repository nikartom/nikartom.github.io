class DonationApp {
    constructor() {
        this.tg = window.Telegram.WebApp;
        this.tonConnect = null;
        this.wallet = null;
        this.recipient = null;
        this.amount = 0;
        this.message = '';
        this.minAmount = 0.5;
        
        this.init();
    }

    async init() {
        try {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
            this.tg.ready();
            this.tg.expand();
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã
            this.setupTheme();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TON Connect
            await this.initTonConnect();
            
            // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—É—á–∞—Ç–µ–ª—è
            await this.loadRecipientData();
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
            this.setupEventListeners();
            
            // –°–∫—Ä—ã—Ç–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –ø–æ–∫–∞–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            this.hideLoading();
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
            if (error.message.includes('TON Connect UI library failed to load')) {
                this.showError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É TON Connect. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.');
            } else {
                this.showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ' + error.message);
            }
        }
    }

    setupTheme() {
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–æ–≤–æ–π —Å—Ö–µ–º—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–º—ã Telegram
        if (this.tg.themeParams) {
            const root = document.documentElement;
            root.style.setProperty('--tg-theme-bg-color', this.tg.themeParams.bg_color || '#ffffff');
            root.style.setProperty('--tg-theme-text-color', this.tg.themeParams.text_color || '#000000');
            root.style.setProperty('--tg-theme-hint-color', this.tg.themeParams.hint_color || '#8E8E93');
            root.style.setProperty('--tg-theme-link-color', this.tg.themeParams.link_color || '#007AFF');
            root.style.setProperty('--tg-theme-button-color', this.tg.themeParams.button_color || '#007AFF');
            root.style.setProperty('--tg-theme-button-text-color', this.tg.themeParams.button_text_color || '#ffffff');
        }
    }

    async initTonConnect() {
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ TON Connect UI
        if (typeof TonConnectUI === 'undefined') {
            console.log('üîÑ Waiting for TonConnectUI to load...');
            const result = await this.waitForTonConnect();
            
            if (result === 'fallback') {
                console.log('üì± Using fallback mode without TON Connect');
                this.useFallbackMode = true;
                return;
            }
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TON Connect
        this.tonConnect = new TonConnectUI({
            manifestUrl: `${window.location.origin}/tonconnect-manifest.json`,
            buttonRootId: null // –ú—ã –±—É–¥–µ–º —É–ø—Ä–∞–≤–ª—è—Ç—å –∫–Ω–æ–ø–∫–æ–π –≤—Ä—É—á–Ω—É—é
        });

        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫–æ—à–µ–ª—å–∫–∞
        this.tonConnect.onStatusChange(wallet => {
            this.wallet = wallet;
            this.updateWalletUI();
            this.updateSendButton();
        });
    }

    async waitForTonConnect() {
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ TON Connect UI –º–∞–∫—Å–∏–º—É–º 10 —Å–µ–∫—É–Ω–¥
        return new Promise((resolve, reject) => {
            let attempts = 0;
            const maxAttempts = 100; // 10 —Å–µ–∫—É–Ω–¥ (100 * 100ms)
            
            const checkTonConnect = () => {
                if (typeof TonConnectUI !== 'undefined') {
                    resolve();
                    return;
                }
                
                attempts++;
                if (attempts >= maxAttempts) {
                    console.warn('TON Connect UI library not available, using fallback mode');
                    resolve('fallback');
                    return;
                }
                
                setTimeout(checkTonConnect, 100);
            };
            
            checkTonConnect();
        });
    }

    async loadRecipientData() {
        try {
            // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL
            const urlParams = new URLSearchParams(window.location.search);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä—è–º–æ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
            const debugInfo = `
üîç –û–¢–õ–ê–î–ö–ê:
URL: ${window.location.href}
Search: ${window.location.search}

–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
- recipient_id: ${urlParams.get('recipient_id') || '–ù–ï–¢'}
- recipient_name: ${urlParams.get('recipient_name') || '–ù–ï–¢'}
- min_amount: ${urlParams.get('min_amount') || '–ù–ï–¢'}
- recipient_wallet: ${urlParams.get('recipient_wallet') || '–ù–ï–¢'}
            `;
            
            // –í—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–ª–∞–¥–∫—É
            document.getElementById('recipient-info').innerHTML = `<pre style="font-size: 12px; background: #f0f0f0; padding: 10px; border-radius: 5px;">${debugInfo}</pre>`;
            
            const recipientId = urlParams.get('recipient_id');
            const recipientName = urlParams.get('recipient_name');
            const minAmount = urlParams.get('min_amount');
            const recipientWallet = urlParams.get('recipient_wallet');
            
            if (!recipientId || !recipientName || !minAmount || !recipientWallet) {
                throw new Error('–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –¥–æ–Ω–∞—Ç–∞. –°–º–æ—Ç—Ä–∏—Ç–µ –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã—à–µ.');
            }

            // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            this.recipient = {
                public_id: recipientId,
                name: decodeURIComponent(recipientName),
                min_amount: parseFloat(minAmount),
                description: '–ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ —Å—Ç—Ä–∏–º–µ—Ä–∞!',
                wallet: decodeURIComponent(recipientWallet)
            };
            
            this.updateRecipientUI();
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—É—á–∞—Ç–µ–ª—è:', error);
            console.error('‚ùå Error details:', error.message);
            this.showError('–ü–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω: ' + error.message);
        }
    }

    updateRecipientUI() {
        if (!this.recipient) return;

        const nameElement = document.getElementById('streamer-name');
        const descriptionElement = document.getElementById('streamer-description');
        const initialElement = document.getElementById('streamer-initial');
        const minAmountElement = document.getElementById('min-amount');

        nameElement.textContent = this.recipient.name;
        descriptionElement.textContent = this.recipient.description || '–ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ —Å—Ç—Ä–∏–º–µ—Ä–∞!';
        initialElement.textContent = this.recipient.name.charAt(0).toUpperCase();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É
        this.minAmount = this.recipient.min_amount || 0.5;
        minAmountElement.textContent = this.minAmount;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å—É–º–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã
        this.updateAmountButtons();
    }

    updateAmountButtons() {
        const container = document.getElementById('amount-buttons');
        const amounts = [
            this.minAmount,
            this.minAmount * 2,
            this.minAmount * 10,
            this.minAmount * 20
        ];

        container.innerHTML = '';
        amounts.forEach(amount => {
            const button = document.createElement('button');
            button.className = 'amount-btn';
            button.setAttribute('data-amount', amount);
            button.textContent = `${amount} TON`;
            container.appendChild(button);
        });
    }

    setupEventListeners() {
        // –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Å—É–º–º—ã
        document.addEventListener('click', (e) => {
            if (e.target.classList.contains('amount-btn')) {
                this.selectAmount(parseFloat(e.target.getAttribute('data-amount')));
            }
        });

        // –ü–æ–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—É–º–º—ã
        const customAmountInput = document.getElementById('custom-amount');
        customAmountInput.addEventListener('input', (e) => {
            const value = parseFloat(e.target.value);
            if (!isNaN(value) && value > 0) {
                this.selectAmount(value);
            } else {
                this.amount = 0;
                this.updateFinalAmount();
                this.updateSendButton();
            }
        });

        // –°—á–µ—Ç—á–∏–∫ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        const messageInput = document.getElementById('donation-message');
        const charCounter = document.getElementById('char-counter');
        messageInput.addEventListener('input', (e) => {
            const length = e.target.value.length;
            charCounter.textContent = length;
            this.message = e.target.value;
        });

        // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞
        document.getElementById('connect-wallet-btn').addEventListener('click', () => {
            this.connectWallet();
        });

        // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞
        document.getElementById('disconnect-btn').addEventListener('click', () => {
            this.disconnectWallet();
        });

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–Ω–∞—Ç–∞
        document.getElementById('send-donation').addEventListener('click', () => {
            this.showConfirmation();
        });

        // –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
        document.getElementById('confirm-send').addEventListener('click', () => {
            this.sendDonation();
        });

        document.getElementById('cancel-send').addEventListener('click', () => {
            this.hideModal('confirmation-modal');
        });

        document.getElementById('close-app').addEventListener('click', () => {
            this.tg.close();
        });

        document.getElementById('close-error').addEventListener('click', () => {
            this.hideModal('error-modal');
        });

        // Haptic feedback
        this.tg.HapticFeedback = this.tg.HapticFeedback || {
            impactOccurred: () => {},
            notificationOccurred: () => {},
            selectionChanged: () => {}
        };
    }

    selectAmount(amount) {
        this.amount = amount;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        document.querySelectorAll('.amount-btn').forEach(btn => {
            btn.classList.remove('active');
            if (parseFloat(btn.getAttribute('data-amount')) === amount) {
                btn.classList.add('active');
            }
        });

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—É–º–º—ã
        document.getElementById('custom-amount').value = amount;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—É–º–º—É
        this.updateFinalAmount();
        this.updateSendButton();

        // Haptic feedback
        this.tg.HapticFeedback.selectionChanged();
    }

    updateFinalAmount() {
        const finalAmount = this.amount * 0.95; // 5% –∫–æ–º–∏—Å—Å–∏—è
        document.getElementById('final-amount').textContent = finalAmount.toFixed(2);
    }

    async connectWallet() {
        try {
            if (this.useFallbackMode) {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
                this.showError('TON Connect –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ—à–µ–ª–µ–∫ –Ω–∞–ø—Ä—è–º—É—é:\n\n–ê–¥—Ä–µ—Å: ' + this.recipient.wallet + '\n–°—É–º–º–∞: ' + this.amount + ' TON');
                return;
            }
            
            await this.tonConnect.openModal();
            this.tg.HapticFeedback.impactOccurred('medium');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞:', error);
            this.showError('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞');
        }
    }

    async disconnectWallet() {
        try {
            await this.tonConnect.disconnect();
            this.tg.HapticFeedback.impactOccurred('light');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞:', error);
        }
    }

    updateWalletUI() {
        const connectSection = document.getElementById('wallet-connect');
        const connectedSection = document.getElementById('wallet-connected');

        if (this.useFallbackMode) {
            // –í fallback —Ä–µ–∂–∏–º–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
            connectSection.style.display = 'block';
            connectedSection.style.display = 'none';
            
            const connectBtn = document.getElementById('connect-wallet');
            connectBtn.textContent = 'üì± –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –æ–ø–ª–∞—Ç–µ';
            return;
        }

        if (this.wallet) {
            // –ö–æ—à–µ–ª–µ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω
            connectSection.style.display = 'none';
            connectedSection.style.display = 'block';
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—à–µ–ª—å–∫–µ
            const addressElement = document.getElementById('wallet-address');
            const balanceElement = document.getElementById('wallet-balance');
            
            // –°–æ–∫—Ä–∞—â–∞–µ–º –∞–¥—Ä–µ—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            const shortAddress = this.wallet.account.address.slice(0, 6) + 
                               '...' + 
                               this.wallet.account.address.slice(-6);
            addressElement.textContent = shortAddress;
            
            // –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
            this.updateWalletBalance();
            
        } else {
            // –ö–æ—à–µ–ª–µ–∫ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω
            connectSection.style.display = 'block';
            connectedSection.style.display = 'none';
        }
    }

    async updateWalletBalance() {
        try {
            // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –±–∞–ª–∞–Ω—Å–∞ —á–µ—Ä–µ–∑ TON API
            document.getElementById('wallet-balance').textContent = '...';
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:', error);
            document.getElementById('wallet-balance').textContent = '–Ω/–¥';
        }
    }

    updateSendButton() {
        const sendButton = document.getElementById('send-donation');
        
        if (this.useFallbackMode) {
            // –í fallback —Ä–µ–∂–∏–º–µ –∫–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ —Å—É–º–º–∞
            const isValid = this.amount >= this.minAmount && this.recipient;
            sendButton.disabled = !isValid;
            
            if (isValid) {
                sendButton.textContent = `üìã –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é`;
            } else if (this.amount < this.minAmount) {
                sendButton.textContent = `üí∞ –ú–∏–Ω. ${this.minAmount} TON`;
            } else {
                sendButton.textContent = 'üìã –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é';
            }
            return;
        }
        
        const isValid = this.wallet && 
                       this.amount >= this.minAmount && 
                       this.recipient;
        
        sendButton.disabled = !isValid;
        
        if (isValid) {
            sendButton.textContent = `üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å ${this.amount} TON`;
        } else if (!this.wallet) {
            sendButton.textContent = 'üîó –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫';
        } else if (this.amount < this.minAmount) {
            sendButton.textContent = `üí∞ –ú–∏–Ω. ${this.minAmount} TON`;
        } else {
            sendButton.textContent = 'üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–Ω–∞—Ç';
        }
    }

    showConfirmation() {
        if (this.useFallbackMode) {
            // –í fallback —Ä–µ–∂–∏–º–µ —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
            this.sendDonation();
            return;
        }
        
        if (!this.wallet || this.amount < this.minAmount) return;

        // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        document.getElementById('confirm-recipient').textContent = this.recipient.name;
        document.getElementById('confirm-amount').textContent = `${this.amount} TON`;
        document.getElementById('confirm-final').textContent = `${(this.amount * 0.95).toFixed(2)} TON`;
        
        const messageRow = document.getElementById('confirm-message-row');
        if (this.message.trim()) {
            document.getElementById('confirm-message').textContent = this.message;
            messageRow.style.display = 'flex';
        } else {
            messageRow.style.display = 'none';
        }

        this.showModal('confirmation-modal');
        this.tg.HapticFeedback.impactOccurred('light');
    }

    async sendDonation() {
        try {
            if (this.useFallbackMode) {
                // –í fallback —Ä–µ–∂–∏–º–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
                const instructions = `
üí∞ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–µ—Ä–µ–≤–æ–¥—É:

üìç –ê–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è:
${this.recipient.wallet}

üíµ –°—É–º–º–∞: ${this.amount} TON

üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: 
don${Date.now()}_${this.tg.initDataUnsafe?.user?.id || 'unknown'}

üì± –û—Ç–∫—Ä–æ–π—Ç–µ –ª—é–±–æ–π TON –∫–æ—à–µ–ª–µ–∫ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.
                `;
                
                this.showError(instructions);
                return;
            }
            
            this.hideModal('confirmation-modal');
            
            // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
            const donationId = Date.now();
            const comment = `don${donationId}_${this.tg.initDataUnsafe?.user?.id || 'unknown'}`;
            
            // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
            const transaction = {
                validUntil: Math.floor(Date.now() / 1000) + 360, // 6 –º–∏–Ω—É—Ç
                messages: [
                    {
                        address: this.recipient.wallet,
                        amount: (this.amount * 1000000000).toString(), // –í –Ω–∞not–æ–Ω
                        payload: this.createCommentPayload(comment)
                    }
                ]
            };

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
            const result = await this.tonConnect.sendTransaction(transaction);
            
            if (result) {
                // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –±–æ—Ç–∞
                console.log('–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
                
                this.showSuccess();
                this.tg.HapticFeedback.notificationOccurred('success');
            }
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–Ω–∞—Ç–∞:', error);
            this.showError('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–Ω–∞—Ç–∞');
            this.tg.HapticFeedback.notificationOccurred('error');
        }
    }

    createCommentPayload(comment) {
        try {
            // –°–æ–∑–¥–∞–µ–º payload –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –≤ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
            const encoder = new TextEncoder();
            const commentBytes = encoder.encode(comment);
            
            // –ü—Ä–æ—Å—Ç–∞—è –∏–º–ø–ª–µ–º–µ–Ω—Ç–∞—Ü–∏—è –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
            // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å @ton/core
            const payload = new Uint8Array(4 + commentBytes.length);
            payload.set([0, 0, 0, 0]); // op code –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
            payload.set(commentBytes, 4);
            
            // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64
            return btoa(String.fromCharCode(...payload));
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è payload:', error);
            return null;
        }
    }

    // –ú–µ—Ç–æ–¥ notifyBackend —É–¥–∞–ª–µ–Ω - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –±–æ—Ç–∞

    showSuccess() {
        this.showModal('success-modal');
    }

    showError(message) {
        document.getElementById('error-message').textContent = message;
        this.showModal('error-modal');
    }

    showModal(modalId) {
        document.getElementById(modalId).style.display = 'flex';
    }

    hideModal(modalId) {
        document.getElementById(modalId).style.display = 'none';
    }

    hideLoading() {
        document.getElementById('loading').style.display = 'none';
        document.getElementById('main-content').style.display = 'block';
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', () => {
    new DonationApp();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
window.addEventListener('error', (event) => {
    console.error('–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', event.error);
});

window.addEventListener('unhandledrejection', (event) => {
    console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞:', event.reason);
}); 